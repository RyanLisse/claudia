{
	"timestamp": "2025-07-15T10:13:10.190Z",
	"buildPerformance": {
		"typecheck": {
			"status": "failed",
			"error": "Command failed: bun run check-types\n$ turbo check-types\nturbo 2.5.4\n\nserver:check-types: ERROR: command finished with error: command (/Users/neo/Developer/experiments/claudia/frontend/apps/server) /Users/neo/.bun/bin/bun run check-types exited (2)\nserver#check-types: command (/Users/neo/Developer/experiments/claudia/frontend/apps/server) /Users/neo/.bun/bin/bun run check-types exited (2)\n ERROR  run failed: command  exited (2)\n"
		},
		"lint": {
			"status": "failed",
			"error": "Command failed: bun run check\n$ biome check --write .\napps/server/src/db/electric.ts:13:15 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    12 │ // Initialize Electric client\n  > 13 │ let electric: any | null = null;\n       │               ^^^\n    14 │ \n    15 │ export async function initElectric(): Promise<any> {\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:15:47 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    13 │ let electric: any | null = null;\n    14 │ \n  > 15 │ export async function initElectric(): Promise<any> {\n       │                                               ^^^\n    16 │ \tif (electric) return electric;\n    17 │ \t// Initialize the Electric client\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:19:9 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    17 │ \t// Initialize the Electric client\n    18 │ \telectric = await electrify(\n  > 19 │ \t\t{} as any, // Database placeholder\n       │ \t\t      ^^^\n    20 │ \t\tschema as any,\n    21 │ \t\telectricConfig,\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:20:13 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    18 │ \telectric = await electrify(\n    19 │ \t\t{} as any, // Database placeholder\n  > 20 │ \t\tschema as any,\n       │ \t\t          ^^^\n    21 │ \t\telectricConfig,\n    22 │ \t);\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:30:49 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    29 │ // Set up sync subscriptions for real-time data\n  > 30 │ async function setupSyncSubscriptions(electric: any) {\n       │                                                 ^^^\n    31 │ \tconst { db } = electric;\n    32 │ \t// Subscribe to users table\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:33:15 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    31 │ \tconst { db } = electric;\n    32 │ \t// Subscribe to users table\n  > 33 │ \tawait (db as any).users?.sync?.();\n       │ \t             ^^^\n    34 │ \n    35 │ \t// Subscribe to projects table\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:36:15 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    35 │ \t// Subscribe to projects table\n  > 36 │ \tawait (db as any).projects?.sync?.();\n       │ \t             ^^^\n    37 │ \n    38 │ \t// Subscribe to agents table\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:39:15 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    38 │ \t// Subscribe to agents table\n  > 39 │ \tawait (db as any).agents?.sync?.();\n       │ \t             ^^^\n    40 │ \n    41 │ \t// Subscribe to sessions table with shape filtering\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:42:15 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    41 │ \t// Subscribe to sessions table with shape filtering\n  > 42 │ \tawait (db as any).sessions?.sync?.({\n       │ \t             ^^^\n    43 │ \t\t// Only sync active sessions\n    44 │ \t\twhere: { status: \"active\" },\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:48:15 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    47 │ \t// Subscribe to messages table with limits\n  > 48 │ \tawait (db as any).messages?.sync?.({\n       │ \t             ^^^\n    49 │ \t\t// Only sync recent messages\n    50 │ \t\twhere: {\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:58:15 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    57 │ \t// Subscribe to memory table with user filtering\n  > 58 │ \tawait (db as any).memory?.sync?.({\n       │ \t             ^^^\n    59 │ \t\t// Sync based on current user (to be set dynamically)\n    60 │ \t\twhere: { userId: getCurrentUserId() },\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:64:15 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    63 │ \t// Subscribe to sync events for monitoring\n  > 64 │ \tawait (db as any).syncEvents?.sync?.({\n       │ \t             ^^^\n    65 │ \t\twhere: {\n    66 │ \t\t\tstatus: [\"pending\", \"conflict\"],\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:79:20 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    77 │ // Sync utilities\n    78 │ export class ElectricSyncManager {\n  > 79 │ \tprivate electric: any | null = null;\n       │ \t                  ^^^\n    80 │ \n    81 │ \tasync initialize(): Promise<void> {\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:98:19 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n     96 │ \t\t}\n     97 │ \n   > 98 │ \t\tawait (table as any).sync(shape);\n        │ \t\t                ^^^\n     99 │ \t}\n    100 │ \n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:159:18 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    157 │ \t\t\tavgLatency:\n    158 │ \t\t\t\tmetrics\n  > 159 │ \t\t\t\t\t.filter((m: any) => m.metricType === \"sync_latency\")\n        │ \t\t\t\t\t            ^^^\n    160 │ \t\t\t\t\t.reduce((sum: number, m: any) => sum + m.value, 0) / metrics.length ||\n    161 │ \t\t\t\t0,\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:160:31 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    158 │ \t\t\t\tmetrics\n    159 │ \t\t\t\t\t.filter((m: any) => m.metricType === \"sync_latency\")\n  > 160 │ \t\t\t\t\t.reduce((sum: number, m: any) => sum + m.value, 0) / metrics.length ||\n        │ \t\t\t\t\t                         ^^^\n    161 │ \t\t\t\t0,\n    162 │ \t\t\tconflictRate:\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:164:18 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    162 │ \t\t\tconflictRate:\n    163 │ \t\t\t\tmetrics\n  > 164 │ \t\t\t\t\t.filter((m: any) => m.metricType === \"conflict_rate\")\n        │ \t\t\t\t\t            ^^^\n    165 │ \t\t\t\t\t.reduce((sum: number, m: any) => sum + m.value, 0) / metrics.length ||\n    166 │ \t\t\t\t0,\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:165:31 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    163 │ \t\t\t\tmetrics\n    164 │ \t\t\t\t\t.filter((m: any) => m.metricType === \"conflict_rate\")\n  > 165 │ \t\t\t\t\t.reduce((sum: number, m: any) => sum + m.value, 0) / metrics.length ||\n        │ \t\t\t\t\t                         ^^^\n    166 │ \t\t\t\t0,\n    167 │ \t\t\tlastSync: metrics[0]?.measuredAt || null,\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:209:24 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    208 │ \tasync autoResolve(conflict: Record<string, unknown>): Promise<unknown> {\n  > 209 │ \t\tswitch ((conflict as any).conflictType) {\n        │ \t\t                     ^^^\n    210 │ \t\t\tcase \"concurrent_update\": {\n    211 │ \t\t\t\t// Use timestamp-based resolution\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\napps/server/src/db/electric.ts:212:36 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  ! Unexpected any. Specify a different type.\n  \n    210 │ \t\t\tcase \"concurrent_update\": {\n    211 │ \t\t\t\t// Use timestamp-based resolution\n  > 212 │ \t\t\t\tconst localData = (conflict as any).localData as Record<string, any>;\n        │ \t\t\t\t                               ^^^\n    213 │ \t\t\t\tconst remoteData = (conflict as any).remoteData as Record<string, any>;\n    214 │ \t\t\t\tif (localData.updatedAt > remoteData.updatedAt) {\n  \n  i any disables many type checking rules. Its use should be avoided.\n  \n\ncheck ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n  × Some errors were emitted while applying fixes.\n  \n\nerror: script \"check\" exited with code 1\n"
		},
		"test": {
			"status": "failed",
			"error": "Command failed: bun test --run\n\ntests/e2e/auth.test.ts:\n\n# Unhandled error between tests\n-------------------------------\n69 |     this.test = test;\n70 |   }\n71 |   _currentSuite(location, title) {\n72 |     const suite = (0, import_globals.currentlyLoadingFileSuite)();\n73 |     if (!suite) {\n74 |       throw new Error([\n                 ^\nerror: Playwright Test did not expect test.describe() to be called here.\nMost common reasons include:\n- You are calling test.describe() in a configuration file.\n- You are calling test.describe() in a file that is imported by the configuration file.\n- You have two different versions of @playwright/test. This usually happens\n  when one of the dependencies in your package.json depends on @playwright/test.\n      at _currentSuite (/Users/neo/Developer/experiments/claudia/frontend/node_modules/playwright/lib/common/testType.js:74:13)\n      at _describe (/Users/neo/Developer/experiments/claudia/frontend/node_modules/playwright/lib/common/testType.js:114:24)\n      at /Users/neo/Developer/experiments/claudia/frontend/tests/e2e/auth.test.ts:11:6\n      at loadAndEvaluateModule (2:1)\n-------------------------------\n\n\ntests/e2e/smoke.test.ts:\n\n# Unhandled error between tests\n-------------------------------\n69 |     this.test = test;\n70 |   }\n71 |   _currentSuite(location, title) {\n72 |     const suite = (0, import_globals.currentlyLoadingFileSuite)();\n73 |     if (!suite) {\n74 |       throw new Error([\n                 ^\nerror: Playwright Test did not expect test.describe() to be called here.\nMost common reasons include:\n- You are calling test.describe() in a configuration file.\n- You are calling test.describe() in a file that is imported by the configuration file.\n- You have two different versions of @playwright/test. This usually happens\n  when one of the dependencies in your package.json depends on @playwright/test.\n      at _currentSuite (/Users/neo/Developer/experiments/claudia/frontend/node_modules/playwright/lib/common/testType.js:74:13)\n      at _describe (/Users/neo/Developer/experiments/claudia/frontend/node_modules/playwright/lib/common/testType.js:114:24)\n      at /Users/neo/Developer/experiments/claudia/frontend/tests/e2e/smoke.test.ts:7:6\n      at loadAndEvaluateModule (2:1)\n-------------------------------\n\n\ntests/e2e/projects.test.ts:\n\n# Unhandled error between tests\n-------------------------------\n69 |     this.test = test;\n70 |   }\n71 |   _currentSuite(location, title) {\n72 |     const suite = (0, import_globals.currentlyLoadingFileSuite)();\n73 |     if (!suite) {\n74 |       throw new Error([\n                 ^\nerror: Playwright Test did not expect test.describe() to be called here.\nMost common reasons include:\n- You are calling test.describe() in a configuration file.\n- You are calling test.describe() in a file that is imported by the configuration file.\n- You have two different versions of @playwright/test. This usually happens\n  when one of the dependencies in your package.json depends on @playwright/test.\n      at _currentSuite (/Users/neo/Developer/experiments/claudia/frontend/node_modules/playwright/lib/common/testType.js:74:13)\n      at _describe (/Users/neo/Developer/experiments/claudia/frontend/node_modules/playwright/lib/common/testType.js:114:24)\n      at /Users/neo/Developer/experiments/claudia/frontend/tests/e2e/projects.test.ts:13:6\n      at loadAndEvaluateModule (2:1)\n-------------------------------\n\n\ntests/e2e/basic.test.ts:\n\n# Unhandled error between tests\n-------------------------------\n69 |     this.test = test;\n70 |   }\n71 |   _currentSuite(location, title) {\n72 |     const suite = (0, import_globals.currentlyLoadingFileSuite)();\n73 |     if (!suite) {\n74 |       throw new Error([\n                 ^\nerror: Playwright Test did not expect test.describe() to be called here.\nMost common reasons include:\n- You are calling test.describe() in a configuration file.\n- You are calling test.describe() in a file that is imported by the configuration file.\n- You have two different versions of @playwright/test. This usually happens\n  when one of the dependencies in your package.json depends on @playwright/test.\n      at _currentSuite (/Users/neo/Developer/experiments/claudia/frontend/node_modules/playwright/lib/common/testType.js:74:13)\n      at _describe (/Users/neo/Developer/experiments/claudia/frontend/node_modules/playwright/lib/common/testType.js:114:24)\n      at /Users/neo/Developer/experiments/claudia/frontend/tests/e2e/basic.test.ts:7:6\n      at loadAndEvaluateModule (2:1)\n-------------------------------\n\n\npackages/ui-kit/tests/Button.test.tsx:\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Button.test.tsx:8:3)\n(fail) Button > renders correctly [0.64ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Button.test.tsx:16:3)\n(fail) Button > handles click events [0.49ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Button.test.tsx:23:3)\n(fail) Button > shows loading state [0.66ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Button.test.tsx:32:3)\n(fail) Button > is disabled when disabled prop is true [0.12ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Button.test.tsx:38:3)\n(fail) Button > renders with left icon [0.11ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Button.test.tsx:47:3)\n(fail) Button > renders with right icon [0.15ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Button.test.tsx:56:24)\n(fail) Button > applies correct variant classes [0.08ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Button.test.tsx:67:24)\n(fail) Button > applies correct size classes [0.06ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Button.test.tsx:78:3)\n(fail) Button > supports custom className [0.03ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Button.test.tsx:84:3)\n(fail) Button > forwards ref correctly\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Button.test.tsx:89:3)\n(fail) Button > has proper accessibility attributes [0.04ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Button.test.tsx:98:3)\n(fail) Button > prevents click when loading\n\npackages/ui-kit/tests/Input.test.tsx:\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:9:3)\n(fail) Input > renders correctly [1.36ms]\n 5 | import '@testing-library/dom';\n 6 | import { prepareValueInterceptor, prepareSelectionInterceptor, prepareRangeTextInterceptor } from './interceptor.js';\n 7 | \n 8 | const isPrepared = Symbol('Node prepared with document state workarounds');\n 9 | function prepareDocument(document) {\n10 |     if (document[isPrepared]) {\n             ^\nTypeError: undefined is not an object (evaluating 'document[isPrepared]')\n      at prepareDocument (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/user-event/dist/esm/document/prepareDocument.js:10:9)\n      at setupMain (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/user-event/dist/esm/setup/setup.js:52:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:14:26)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:13:30)\n(fail) Input > handles change events [0.29ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:24:3)\n(fail) Input > renders with label [0.06ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:31:3)\n(fail) Input > renders with description [0.04ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:43:3)\n(fail) Input > shows error state [0.06ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:60:3)\n(fail) Input > shows success state [0.04ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:72:3)\n(fail) Input > is disabled when disabled prop is true [0.03ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:77:3)\n(fail) Input > renders with left icon [0.04ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:88:3)\n(fail) Input > renders with addons [0.04ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:97:24)\n(fail) Input > applies correct size classes [0.05ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:105:24)\n(fail) Input > supports different input types [0.04ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:119:3)\n(fail) Input > has proper accessibility attributes [0.04ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:134:3)\n(fail) Input > generates unique IDs [0.05ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/Input.test.tsx:148:3)\n(fail) Input > uses provided ID [0.04ms]\n\npackages/ui-kit/tests/accessibility.test.tsx:\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:21:26)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:20:50)\n(fail) Accessibility Tests > Button > should not have accessibility violations [4.45ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:35:26)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:34:57)\n(fail) Accessibility Tests > Button > should have proper ARIA attributes when loading [0.23ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:46:4)\n(fail) Accessibility Tests > Button > should be keyboard accessible [0.06ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:56:26)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:55:50)\n(fail) Accessibility Tests > Input > should not have accessibility violations [0.14ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:79:4)\n(fail) Accessibility Tests > Input > should have proper label association [0.02ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:93:26)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:92:46)\n(fail) Accessibility Tests > Input > should have proper error association [0.29ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:112:26)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:111:50)\n(fail) Accessibility Tests > Card > should not have accessibility violations [0.21ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:128:4)\n(fail) Accessibility Tests > Card > should have proper heading hierarchy [0.10ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:151:26)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:150:50)\n(fail) Accessibility Tests > Alert > should not have accessibility violations [0.05ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:168:4)\n(fail) Accessibility Tests > Alert > should have proper alert role [0.07ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:176:26)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:175:47)\n(fail) Accessibility Tests > Alert > should have accessible dismiss button [0.10ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:192:26)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:191:50)\n(fail) Accessibility Tests > Badge > should not have accessibility violations\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:205:26)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:204:46)\n(fail) Accessibility Tests > Badge > should have accessible remove button [0.15ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:219:4)\n(fail) Accessibility Tests > Keyboard Navigation > should support keyboard navigation across components [0.04ms]\n252 |     throw error;\n253 |   }\n254 |   if (!baseElement) {\n255 |     // default to document.body instead of documentElement to avoid output of potentially-large\n256 |     // head elements (such as JSS style blocks) in debug output\n257 |     baseElement = document.body;\n                        ^\nReferenceError: document is not defined\n      at render (/Users/neo/Developer/experiments/claudia/frontend/node_modules/@testing-library/react/dist/pure.js:257:19)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/packages/ui-kit/tests/accessibility.test.tsx:256:4)\n(fail) Accessibility Tests > Focus Management > should maintain focus visibility [0.13ms]\n\npackages/ui-kit/tests/test-helper.test.ts:\n(pass) Test Helper Functions > add > should add two positive numbers [0.67ms]\n(pass) Test Helper Functions > add > should add negative numbers [0.03ms]\n(pass) Test Helper Functions > add > should handle zero [0.02ms]\n(pass) Test Helper Functions > multiply > should multiply two numbers\n(pass) Test Helper Functions > multiply > should handle zero\n(pass) Test Helper Functions > multiply > should handle negative numbers\n(pass) Test Helper Functions > divide > should divide two numbers\n(pass) Test Helper Functions > divide > should handle negative numbers\n(pass) Test Helper Functions > divide > should throw error for division by zero [0.20ms]\n(pass) Test Helper Functions > greet > should greet with name [0.05ms]\n(pass) Test Helper Functions > greet > should return default greeting for empty name [0.01ms]\n(pass) Test Helper Functions > isEven > should return true for even numbers [0.01ms]\n(pass) Test Helper Functions > isEven > should return false for odd numbers\n(pass) Test Helper Functions > getStatus > should return correct status for different scores [0.03ms]\n(pass) Test Helper Functions > getStatus > should handle edge cases\n(pass) Test Helper Functions > Calculator > should add numbers and track history [0.13ms]\n(pass) Test Helper Functions > Calculator > should subtract numbers and track history [0.03ms]\n(pass) Test Helper Functions > Calculator > should track multiple operations [0.08ms]\n(pass) Test Helper Functions > Calculator > should clear history [0.10ms]\n\napps/web/src/__tests__/integration/agent-dashboard-integration.test.tsx:\n\n# Unhandled error between tests\n-------------------------------\n2 | import { beforeEach, describe, expect, it, vi } from \"vitest\";\n3 | import type { AgentMetrics, SwarmMetrics } from \"@/types/agent-dashboard\";\n4 | import { AgentDashboard } from \"../__mocks__/AgentDashboard\";\n5 | \n6 | // Mock framer-motion\n7 | vi.mock(\"framer-motion\", () => ({\n       ^\nTypeError: vi.mock is not a function. (In 'vi.mock(\"framer-motion\", () => ({\n  motion: {\n    div: ({ children, ...props }) => jsxDEV_7x81h0kn(\"div\", {\n      ...props,\n      children\n    }, void 0, !1, void 0, this)\n  }\n}))', 'vi.mock' is undefined)\n      at /Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/agent-dashboard-integration.test.tsx:7:4\n      at loadAndEvaluateModule (2:1)\n-------------------------------\n\n\napps/web/src/__tests__/integration/inngest-api.test.ts:\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Inngest Client Configuration > should initialize Inngest client with proper configuration [51561803.98ms]\n(fail) Inngest API Integration > Inngest Client Configuration > should initialize Inngest client with proper configuration\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Inngest Client Configuration > should handle missing environment variables gracefully [51561804.12ms]\n(fail) Inngest API Integration > �:\u0003Ќ\u0003\u0000\u0000andle missing environment variables gracefully\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Task Assignment Function > should assign task to available agent [51561804.17ms]\n(fail) Inngest API Integration > Task Assignment Function > should assign task to available agent\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Task Assignment Function > should queue task when no agents available [51561804.24ms]\n(fail) Inngest API Integration > Task Assignment Function > should queue task when no agents available\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Task Assignment Function > should handle task assignment failure [51561804.28ms]\n(fail) Inngest API Integration > �4\u0001Ќ\u0003\u0000\u0000andle task assignment failure\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Task Monitoring Function > should monitor task execution timeout [51561804.34ms]\n(fail) Inngest API Integration > Task Monitoring Function > should monitor task execution timeout\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Task Monitoring Function > should cancel timed out task [51561804.40ms]\n(fail) Inngest API Integration > �\tWЌ\u0003\u0000\u0000ancel timed out task\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Task Retry Function > should retry failed task with exponential backoff [51561804.43ms]\n(fail) Inngest API Integration > Task Retry Function > should retry failed task with exponential backoff\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Task Retry Function > should mark task as permanently failed after max retries [51561804.49ms]\n(fail) Inngest API Integration > \u0000=\u0003Ќ\u0003\u0000\u0000ark task as permanently failed after max retries\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Agent Health Monitoring > should monitor agent health and detect issues [51561804.52ms]\n(fail) Inngest API Integration > Agent Health Monitoring > should monitor agent health and detect issues\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Agent Health Monitoring > should detect high failure rate [51561804.57ms]\n(fail) Inngest API Integration > Agent Health Monitoring > should detect high failure rate\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Agent Health Monitoring > should detect performance degradation [51561804.60ms]\n(fail) Inngest API Integration > 05\u0001Ќ\u0003\u0000\u0000etect performance degradation\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Agent Scaling Function > should scale up agent pool [51561804.64ms]\n(fail) Inngest API Integration > Agent Scaling Function > should scale up agent pool\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Agent Scaling Function > should scale down agent pool [51561804.67ms]\n(fail) Inngest API Integration > Agent Scaling Function > should scale down agent pool\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Agent Scaling Function > should handle no scaling needed [51561804.68ms]\n(fail) Inngest API Integration > �\nWЌ\u0003\u0000\u0000andle no scaling needed\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Message Routing Function > should route direct message between agents [51561804.72ms]\n(fail) Inngest API Integration > Message Routing Function > should route direct message between agents\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Message Routing Function > should broadcast message to all agents [51561804.77ms]\n(fail) Inngest API Integration > �5\u0001Ќ\u0003\u0000\u0000roadcast message to all agents\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Error Handling > should handle Inngest API errors gracefully [51561804.81ms]\n(fail) Inngest API Integration > Error Handling > should handle Inngest API errors gracefully\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Error Handling > should handle agent registry errors [51561804.84ms]\n(fail) Inngest API Integration > Error Handling > should handle agent registry errors\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Error Handling > should handle task queue errors [51561804.87ms]\n(fail) Inngest API Integration > �\nWЌ\u0003\u0000\u0000andle task queue errors\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Integration with ElectricSQL > should sync task assignments to ElectricSQL [51561804.91ms]\n(fail) Inngest API Integration > Integration with ElectricSQL > should sync task assignments to ElectricSQL\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Integration with ElectricSQL > should handle ElectricSQL sync failures [51561804.95ms]\n(fail) Inngest API Integration > P6\u0001Ќ\u0003\u0000\u0000andle ElectricSQL sync failures\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Performance Testing > should handle high volume of task events [51561804.98ms]\n(fail) Inngest API Integration > Performance Testing > should handle high volume of task events\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/inngest-api.test.ts:15:11)\n(fail) Inngest API Integration > Performance Testing > should handle concurrent agent health monitoring [51561805.02ms]\n(fail) Inngest API Integration > �6\u0001Ќ\u0003\u0000\u0000andle concurrent agent health monitoring\n\napps/web/src/__tests__/integration/simple-integration.test.ts:\n\n# Unhandled error between tests\n-------------------------------\n1 | import { afterEach, beforeEach, describe, expect, it, vi } from \"vitest\";\n2 | import { setupApiTestEnvironment } from \"../utils/test-helpers\";\n3 | \n4 | // Mock @tauri-apps/api/core\n5 | vi.mock(\"@tauri-apps/api/core\", () => ({\n       ^\nTypeError: vi.mock is not a function. (In 'vi.mock(\"@tauri-apps/api/core\", () => ({\n  invoke: vi.fn()\n}))', 'vi.mock' is undefined)\n      at /Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/simple-integration.test.ts:5:4\n      at loadAndEvaluateModule (2:1)\n-------------------------------\n\n\napps/web/src/__tests__/integration/api-authentication.test.ts:\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Environment Configuration > should have all required environment variables set [51561811.98ms]\n(fail) API Authentication Integration > Environment Configuration > should have all required environment variables set\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Environment Configuration > should prevent 401 errors with mock credentials [51561812.07ms]\n(fail) API Authentication Integration > �6\u0001Ќ\u0003\u0000\u0000revent 401 errors with mock credentials\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Inngest API Integration > should successfully send events to Inngest [51561812.12ms]\n(fail) API Authentication Integration > Inngest API Integration > should successfully send events to Inngest\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Inngest API Integration > should handle Inngest webhook requests [51561812.19ms]\n(fail) API Authentication Integration > Inngest API Integration > should handle Inngest webhook requests\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Inngest API Integration > should handle authentication errors gracefully [51561812.21ms]\n(fail) API Authentication Integration > p7\u0001Ќ\u0003\u0000\u0000andle authentication errors gracefully\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Agent API Integration > should authenticate and fetch agents [51561812.26ms]\n(fail) API Authentication Integration > Agent API Integration > should authenticate and fetch agents\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Agent API Integration > should create new agents with authentication [51561812.30ms]\n(fail) API Authentication Integration > Agent API Integration > should create new agents with authentication\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Agent API Integration > should handle agent API errors [51561812.37ms]\n(fail) API Authentication Integration > �\u000bWЌ\u0003\u0000\u0000andle agent API errors\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Task API Integration > should create and manage tasks [51561812.41ms]\n(fail) API Authentication Integration > Task API Integration > should create and manage tasks\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Task API Integration > should fetch task list [51561812.51ms]\n(fail) API Authentication Integration >  \fWЌ\u0003\u0000\u0000etch task list\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Session API Integration > should manage session lifecycle [51561812.57ms]\n(fail) API Authentication Integration > Session API Integration > should manage session lifecycle\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Session API Integration > should authenticate session operations [51561812.60ms]\n(fail) API Authentication Integration > \u00008\u0001Ќ\u0003\u0000\u0000uthenticate session operations\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Health Check Integration > should check API health status [51561812.72ms]\n(fail) API Authentication Integration > �\fWЌ\u0003\u0000\u0000heck API health status\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Error Handling > should handle network errors [51561812.76ms]\n(fail) API Authentication Integration > Error Handling > should handle network errors\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Error Handling > should handle validation errors [51561812.83ms]\n(fail) API Authentication Integration > Error Handling > should handle validation errors\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Error Handling > should handle rate limiting [51561812.88ms]\n(fail) API Authentication Integration > \u0000\rWЌ\u0003\u0000\u0000andle rate limiting\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Real-time Updates > should handle WebSocket connections [51561812.91ms]\n(fail) API Authentication Integration > Real-time Updates > should handle WebSocket connections\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Real-time Updates > should receive real-time task updates [51561813.01ms]\n(fail) API Authentication Integration > Real-time Updates > should receive real-time task updates\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Real-time Updates > should handle WebSocket errors [51561813.04ms]\n(fail) API Authentication Integration > @\rWЌ\u0003\u0000\u0000andle WebSocket errors\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Integration with ElectricSQL > should sync data with ElectricSQL [51561813.06ms]\n(fail) API Authentication Integration > Integration with ElectricSQL > should sync data with ElectricSQL\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Integration with ElectricSQL > should handle ElectricSQL sync status [51561813.10ms]\n(fail) API Authentication Integration > Integration with ElectricSQL > should handle ElectricSQL sync status\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Integration with ElectricSQL > should start and stop sync [51561813.14ms]\n(fail) API Authentication Integration > �\rWЌ\u0003\u0000\u0000tart and stop sync\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Performance Testing > should handle concurrent API requests [51561813.21ms]\n(fail) API Authentication Integration > Performance Testing > should handle concurrent API requests\n215 | \tconst functions = createMockInngestFunctions();\n216 | \tconst handler = createMockInngestHandler();\n217 | \tconst agentSystem = createMockAgentSystem();\n218 | \n219 | \t// Mock the Inngest module\n220 | \tvi.doMock(\"inngest\", () => ({\n          ^\nTypeError: vi.doMock is not a function. (In 'vi.doMock(\"inngest\", () => ({\n    Inngest: vi.fn().mockImplementation(() => inngest),\n    serve: vi.fn().mockImplementation(() => handler)\n  }))', 'vi.doMock' is undefined)\n      at setupInngestMocks (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/mocks/inngest.ts:220:5)\n      at setupApiTestEnvironment (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/utils/test-helpers.ts:184:23)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/api-authentication.test.ts:8:11)\n(fail) API Authentication Integration > Performance Testing > should handle high-volume Inngest events [51561813.23ms]\n(fail) API Authentication Integration >  9\u0001Ќ\u0003\u0000\u0000andle high-volume Inngest events\n\napps/web/src/__tests__/integration/session-management.test.ts:\n\n# Unhandled error between tests\n-------------------------------\n 5 | \tcreateTestDatabase,\n 6 | \tmockTauriInvoke,\n 7 | } from \"../utils/test-helpers\";\n 8 | \n 9 | // Mock @tauri-apps/api/core at the top level\n10 | vi.mock(\"@tauri-apps/api/core\", () => ({\n        ^\nTypeError: vi.mock is not a function. (In 'vi.mock(\"@tauri-apps/api/core\", () => ({\n  invoke: vi.fn()\n}))', 'vi.mock' is undefined)\n      at /Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/integration/session-management.test.ts:10:4\n      at loadAndEvaluateModule (2:1)\n-------------------------------\n\n\napps/web/src/__tests__/integration/store-query-sync.test.tsx:\n\n# Unhandled error between tests\n-------------------------------\n177 | );\n      ^\nerror: Unexpected )\n    at /Users/neo/Developer/experiments/claudia/frontend/apps/web/src/stores/sync-store.ts:177:1\n-------------------------------\n\n\napps/web/src/__tests__/stores/auth-store.test.ts:\n\n# Unhandled error between tests\n-------------------------------\n10 | \tgetItem: vi.fn(),\n11 | \tsetItem: vi.fn(),\n12 | \tremoveItem: vi.fn(),\n13 | \tclear: vi.fn(),\n14 | };\n15 | Object.defineProperty(window, \"localStorage\", {\n                           ^\nReferenceError: window is not defined\n      at /Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/stores/auth-store.test.ts:15:23\n      at loadAndEvaluateModule (2:1)\n-------------------------------\n\n\napps/web/src/__tests__/stores/ui-store.test.ts:\n\n# Unhandled error between tests\n-------------------------------\n 7 | \tsetItem: vi.fn(),\n 8 | \tremoveItem: vi.fn(),\n 9 | \tclear: vi.fn(),\n10 | };\n11 | \n12 | Object.defineProperty(window, \"localStorage\", {\n                           ^\nReferenceError: window is not defined\n      at /Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/stores/ui-store.test.ts:12:23\n      at loadAndEvaluateModule (2:1)\n-------------------------------\n\n\napps/web/src/__tests__/components/BaseAgent.test.ts:\n(pass) BaseAgent - TDD Implementation > Agent Initialization > should initialize agent with correct properties [0.03ms]\n(pass) BaseAgent - TDD Implementation > Agent Initialization > should throw error for invalid agent configuration [0.03ms]\n(pass) BaseAgent - TDD Implementation > Agent Initialization > should set default values for optional properties\n(pass) BaseAgent - TDD Implementation > Task Capability Validation > should validate task capabilities correctly [0.14ms]\n(pass) BaseAgent - TDD Implementation > Task Capability Validation > should reject tasks requiring unavailable capabilities [0.03ms]\n(pass) BaseAgent - TDD Implementation > Task Capability Validation > should handle partial capability matches [0.01ms]\n(pass) BaseAgent - TDD Implementation > Task Capability Validation > should validate multiple required capabilities [0.01ms]\n(pass) BaseAgent - TDD Implementation > Task Execution > should execute valid task successfully [1.36ms]\n354 | \n355 | \t\tit(\"should handle task execution errors gracefully\", async () => {\n356 | \t\t\tconst failingTask = { ...mockTask, id: \"failing-task\" };\n357 | \n358 | \t\t\tvi.spyOn(agent, \"executeTaskImplementation\").mockRejectedValue(\n359 | \t\t\t\tnew Error(\"Compilation error: Type mismatch\"),\n          ^\nerror: Compilation error: Type mismatch\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/components/BaseAgent.test.ts:359:5)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/components/BaseAgent.test.ts:355:56)\n(fail) BaseAgent - TDD Implementation > Task Execution > should handle task execution errors gracefully [0.34ms]\n376 | \t\t\tconst startTime = Date.now();\n377 | \t\t\tawait agent.execute(mockTask);\n378 | \t\t\tconst endTime = Date.now();\n379 | \n380 | \t\t\tconst metrics = agent.getExecutionMetrics();\n381 | \t\t\texpect(metrics.totalTasksExecuted).toBe(1);\n                                            ^\nerror: expect(received).toBe(expected)\n\nExpected: 1\nReceived: 0\n\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/components/BaseAgent.test.ts:381:39)\n(fail) BaseAgent - TDD Implementation > Task Execution > should track task execution metrics [0.88ms]\n(pass) BaseAgent - TDD Implementation > Task Execution > should prevent execution of tasks beyond capability [0.19ms]\n(pass) BaseAgent - TDD Implementation > Concurrent Task Management > should handle multiple concurrent tasks within limit [101.28ms]\n(pass) BaseAgent - TDD Implementation > Concurrent Task Management > should reject tasks when at concurrent limit [0.14ms]\n(pass) BaseAgent - TDD Implementation > Concurrent Task Management > should update status based on task load [500.93ms]\n(pass) BaseAgent - TDD Implementation > Agent Communication and Coordination > should send messages to other agents [0.23ms]\n(pass) BaseAgent - TDD Implementation > Agent Communication and Coordination > should receive and process messages from other agents [0.10ms]\n(pass) BaseAgent - TDD Implementation > Agent Communication and Coordination > should coordinate with multiple agents for complex tasks [0.06ms]\n(pass) BaseAgent - TDD Implementation > Learning and Adaptation > should learn from task execution feedback [0.24ms]\n(pass) BaseAgent - TDD Implementation > Learning and Adaptation > should adapt capabilities based on performance [0.10ms]\n(pass) BaseAgent - TDD Implementation > State Management and Persistence > should save and restore agent state\n(pass) BaseAgent - TDD Implementation > State Management and Persistence > should handle state corruption gracefully [0.04ms]\n48 | \t\tif (!this.canExecuteTask(task)) {\n49 | \t\t\tthrow new Error(\"Agent does not have required capabilities\");\n50 | \t\t}\n51 | \n52 | \t\tif (this.currentTasks.length >= this.maxConcurrentTasks) {\n53 | \t\t\tthrow new Error(\"Agent is at maximum concurrent task limit\");\n              ^\nerror: Agent is at maximum concurrent task limit\n      at execute (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/components/BaseAgent.test.ts:53:10)\n      at execute (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/components/BaseAgent.test.ts:47:23)\n      at map (1:11)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/components/BaseAgent.test.ts:621:37)\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/components/BaseAgent.test.ts:605:72)\n(fail) BaseAgent - TDD Implementation > State Management and Persistence > should maintain state consistency during concurrent operations [0.29ms]\n(pass) BaseAgent - TDD Implementation > Error Handling and Recovery > should recover from execution errors [200.89ms]\n658 | \t\t\t\t.spyOn(agent, \"cleanupResources\")\n659 | \t\t\t\t.mockResolvedValue({ cleaned: true });\n660 | \n661 | \t\t\tawait agent.execute(resourceIntensiveTask);\n662 | \n663 | \t\t\texpect(cleanupSpy).toHaveBeenCalled();\n                            ^\nerror: expect(received).toHaveBeenCalled()\n\nExpected number of calls: >= 1\nReceived number of calls: 0\n\n      at <anonymous> (/Users/neo/Developer/experiments/claudia/frontend/apps/web/src/__tests__/components/BaseAgent.test.ts:663:23)\n(fail) BaseAgent - TDD Implementation > Error Handling and Recovery > should handle memory leaks and resource cleanup [11.55ms]\n(pass) BaseAgent - TDD Implementation > Error Handling and Recovery > should maintain agent health monitoring [1.37ms]\n\napps/web/src/__tests__/hooks/use-optimistic-mutations.test.tsx:\n\n# Unhandled error between tests\n-------------------------------\n177 | );\n      ^\nerror: Unexpected )\n    at /Users/neo/Developer/experiments/claudia/frontend/apps/web/src/stores/sync-store.ts:177:1\n-------------------------------\n\n\napps/server/src/db/tests/repositories.test.ts:\n\n# Unhandled error between tests\n-------------------------------\nerror: Cannot find package 'postgres' from '/Users/neo/Developer/experiments/claudia/frontend/apps/server/src/db/tests/setup.ts'\n-------------------------------\n\n\napps/server/src/db/tests/sync.test.ts:\n\n154 tests failed:\n(fail) Button > renders correctly [0.64ms]\n(fail) Button > handles click events [0.49ms]\n(fail) Button > shows loading state [0.66ms]\n(fail) Button > is disabled when disabled prop is true [0.12ms]\n(fail) Button > renders with left icon [0.11ms]\n(fail) Button > renders with right icon [0.15ms]\n(fail) Button > applies correct variant classes [0.08ms]\n(fail) Button > applies correct size classes [0.06ms]\n(fail) Button > supports custom className [0.03ms]\n(fail) Button > forwards ref correctly\n(fail) Button > has proper accessibility attributes [0.04ms]\n(fail) Button > prevents click when loading\n(fail) Input > renders correctly [1.36ms]\n(fail) Input > handles change events [0.29ms]\n(fail) Input > renders with label [0.06ms]\n(fail) Input > renders with description [0.04ms]\n(fail) Input > shows error state [0.06ms]\n(fail) Input > shows success state [0.04ms]\n(fail) Input > is disabled when disabled prop is true [0.03ms]\n(fail) Input > renders with left icon [0.04ms]\n(fail) Input > renders with addons [0.04ms]\n(fail) Input > applies correct size classes [0.05ms]\n(fail) Input > supports different input types [0.04ms]\n(fail) Input > has proper accessibility attributes [0.04ms]\n(fail) Input > generates unique IDs [0.05ms]\n(fail) Input > uses provided ID [0.04ms]\n(fail) Accessibility Tests > Button > should not have accessibility violations [4.45ms]\n(fail) Accessibility Tests > Button > should have proper ARIA attributes when loading [0.23ms]\n(fail) Accessibility Tests > Button > should be keyboard accessible [0.06ms]\n(fail) Accessibility Tests > Input > should not have accessibility violations [0.14ms]\n(fail) Accessibility Tests > Input > should have proper label association [0.02ms]\n(fail) Accessibility Tests > Input > should have proper error association [0.29ms]\n(fail) Accessibility Tests > Card > should not have accessibility violations [0.21ms]\n(fail) Accessibility Tests > Card > should have proper heading hierarchy [0.10ms]\n(fail) Accessibility Tests > Alert > should not have accessibility violations [0.05ms]\n(fail) Accessibility Tests > Alert > should have proper alert role [0.07ms]\n(fail) Accessibility Tests > Alert > should have accessible dismiss button [0.10ms]\n(fail) Accessibility Tests > Badge > should not have accessibility violations\n(fail) Accessibility Tests > Badge > should have accessible remove button [0.15ms]\n(fail) Accessibility Tests > Keyboard Navigation > should support keyboard navigation across components [0.04ms]\n(fail) Accessibility Tests > Focus Management > should maintain focus visibility [0.13ms]\n(fail) Inngest API Integration > Inngest Client Configuration > should initialize Inngest client with proper configuration [51561803.98ms]\n(fail) Inngest API Integration > Inngest Client Configuration > should initialize Inngest client with proper configuration\n(fail) Inngest API Integration > Inngest Client Configuration > should handle missing environment variables gracefully [51561804.12ms]\n(fail) Inngest API Integration > �:\u0003Ќ\u0003\u0000\u0000andle missing environment variables gracefully\n(fail) Inngest API Integration > Task Assignment Function > should assign task to available agent [51561804.17ms]\n(fail) Inngest API Integration > Task Assignment Function > should assign task to available agent\n(fail) Inngest API Integration > Task Assignment Function > should queue task when no agents available [51561804.24ms]\n(fail) Inngest API Integration > Task Assignment Function > should queue task when no agents available\n(fail) Inngest API Integration > Task Assignment Function > should handle task assignment failure [51561804.28ms]\n(fail) Inngest API Integration > �4\u0001Ќ\u0003\u0000\u0000andle task assignment failure\n(fail) Inngest API Integration > Task Monitoring Function > should monitor task execution timeout [51561804.34ms]\n(fail) Inngest API Integration > Task Monitoring Function > should monitor task execution timeout\n(fail) Inngest API Integration > Task Monitoring Function > should cancel timed out task [51561804.40ms]\n(fail) Inngest API Integration > �\tWЌ\u0003\u0000\u0000ancel timed out task\n(fail) Inngest API Integration > Task Retry Function > should retry failed task with exponential backoff [51561804.43ms]\n(fail) Inngest API Integration > Task Retry Function > should retry failed task with exponential backoff\n(fail) Inngest API Integration > Task Retry Function > should mark task as permanently failed after max retries [51561804.49ms]\n(fail) Inngest API Integration > \u0000=\u0003Ќ\u0003\u0000\u0000ark task as permanently failed after max retries\n(fail) Inngest API Integration > Agent Health Monitoring > should monitor agent health and detect issues [51561804.52ms]\n(fail) Inngest API Integration > Agent Health Monitoring > should monitor agent health and detect issues\n(fail) Inngest API Integration > Agent Health Monitoring > should detect high failure rate [51561804.57ms]\n(fail) Inngest API Integration > Agent Health Monitoring > should detect high failure rate\n(fail) Inngest API Integration > Agent Health Monitoring > should detect performance degradation [51561804.60ms]\n(fail) Inngest API Integration > 05\u0001Ќ\u0003\u0000\u0000etect performance degradation\n(fail) Inngest API Integration > Agent Scaling Function > should scale up agent pool [51561804.64ms]\n(fail) Inngest API Integration > Agent Scaling Function > should scale up agent pool\n(fail) Inngest API Integration > Agent Scaling Function > should scale down agent pool [51561804.67ms]\n(fail) Inngest API Integration > Agent Scaling Function > should scale down agent pool\n(fail) Inngest API Integration > Agent Scaling Function > should handle no scaling needed [51561804.68ms]\n(fail) Inngest API Integration > �\nWЌ\u0003\u0000\u0000andle no scaling needed\n(fail) Inngest API Integration > Message Routing Function > should route direct message between agents [51561804.72ms]\n(fail) Inngest API Integration > Message Routing Function > should route direct message between agents\n(fail) Inngest API Integration > Message Routing Function > should broadcast message to all agents [51561804.77ms]\n(fail) Inngest API Integration > �5\u0001Ќ\u0003\u0000\u0000roadcast message to all agents\n(fail) Inngest API Integration > Error Handling > should handle Inngest API errors gracefully [51561804.81ms]\n(fail) Inngest API Integration > Error Handling > should handle Inngest API errors gracefully\n(fail) Inngest API Integration > Error Handling > should handle agent registry errors [51561804.84ms]\n(fail) Inngest API Integration > Error Handling > should handle agent registry errors\n(fail) Inngest API Integration > Error Handling > should handle task queue errors [51561804.87ms]\n(fail) Inngest API Integration > �\nWЌ\u0003\u0000\u0000andle task queue errors\n(fail) Inngest API Integration > Integration with ElectricSQL > should sync task assignments to ElectricSQL [51561804.91ms]\n(fail) Inngest API Integration > Integration with ElectricSQL > should sync task assignments to ElectricSQL\n(fail) Inngest API Integration > Integration with ElectricSQL > should handle ElectricSQL sync failures [51561804.95ms]\n(fail) Inngest API Integration > P6\u0001Ќ\u0003\u0000\u0000andle ElectricSQL sync failures\n(fail) Inngest API Integration > Performance Testing > should handle high volume of task events [51561804.98ms]\n(fail) Inngest API Integration > Performance Testing > should handle high volume of task events\n(fail) Inngest API Integration > Performance Testing > should handle concurrent agent health monitoring [51561805.02ms]\n(fail) Inngest API Integration > �6\u0001Ќ\u0003\u0000\u0000andle concurrent agent health monitoring\n(fail) API Authentication Integration > Environment Configuration > should have all required environment variables set [51561811.98ms]\n(fail) API Authentication Integration > Environment Configuration > should have all required environment variables set\n(fail) API Authentication Integration > Environment Configuration > should prevent 401 errors with mock credentials [51561812.07ms]\n(fail) API Authentication Integration > �6\u0001Ќ\u0003\u0000\u0000revent 401 errors with mock credentials\n(fail) API Authentication Integration > Inngest API Integration > should successfully send events to Inngest [51561812.12ms]\n(fail) API Authentication Integration > Inngest API Integration > should successfully send events to Inngest\n(fail) API Authentication Integration > Inngest API Integration > should handle Inngest webhook requests [51561812.19ms]\n(fail) API Authentication Integration > Inngest API Integration > should handle Inngest webhook requests\n(fail) API Authentication Integration > Inngest API Integration > should handle authentication errors gracefully [51561812.21ms]\n(fail) API Authentication Integration > p7\u0001Ќ\u0003\u0000\u0000andle authentication errors gracefully\n(fail) API Authentication Integration > Agent API Integration > should authenticate and fetch agents [51561812.26ms]\n(fail) API Authentication Integration > Agent API Integration > should authenticate and fetch agents\n(fail) API Authentication Integration > Agent API Integration > should create new agents with authentication [51561812.30ms]\n(fail) API Authentication Integration > Agent API Integration > should create new agents with authentication\n(fail) API Authentication Integration > Agent API Integration > should handle agent API errors [51561812.37ms]\n(fail) API Authentication Integration > �\u000bWЌ\u0003\u0000\u0000andle agent API errors\n(fail) API Authentication Integration > Task API Integration > should create and manage tasks [51561812.41ms]\n(fail) API Authentication Integration > Task API Integration > should create and manage tasks\n(fail) API Authentication Integration > Task API Integration > should fetch task list [51561812.51ms]\n(fail) API Authentication Integration >  \fWЌ\u0003\u0000\u0000etch task list\n(fail) API Authentication Integration > Session API Integration > should manage session lifecycle [51561812.57ms]\n(fail) API Authentication Integration > Session API Integration > should manage session lifecycle\n(fail) API Authentication Integration > Session API Integration > should authenticate session operations [51561812.60ms]\n(fail) API Authentication Integration > \u00008\u0001Ќ\u0003\u0000\u0000uthenticate session operations\n(fail) API Authentication Integration > Health Check Integration > should check API health status [51561812.72ms]\n(fail) API Authentication Integration > �\fWЌ\u0003\u0000\u0000heck API health status\n(fail) API Authentication Integration > Error Handling > should handle network errors [51561812.76ms]\n(fail) API Authentication Integration > Error Handling > should handle network errors\n(fail) API Authentication Integration > Error Handling > should handle validation errors [51561812.83ms]\n(fail) API Authentication Integration > Error Handling > should handle validation errors\n(fail) API Authentication Integration > Error Handling > should handle rate limiting [51561812.88ms]\n(fail) API Authentication Integration > \u0000\rWЌ\u0003\u0000\u0000andle rate limiting\n(fail) API Authentication Integration > Real-time Updates > should handle WebSocket connections [51561812.91ms]\n(fail) API Authentication Integration > Real-time Updates > should handle WebSocket connections\n(fail) API Authentication Integration > Real-time Updates > should receive real-time task updates [51561813.01ms]\n(fail) API Authentication Integration > Real-time Updates > should receive real-time task updates\n(fail) API Authentication Integration > Real-time Updates > should handle WebSocket errors [51561813.04ms]\n(fail) API Authentication Integration > @\rWЌ\u0003\u0000\u0000andle WebSocket errors\n(fail) API Authentication Integration > Integration with ElectricSQL > should sync data with ElectricSQL [51561813.06ms]\n(fail) API Authentication Integration > Integration with ElectricSQL > should sync data with ElectricSQL\n(fail) API Authentication Integration > Integration with ElectricSQL > should handle ElectricSQL sync status [51561813.10ms]\n(fail) API Authentication Integration > Integration with ElectricSQL > should handle ElectricSQL sync status\n(fail) API Authentication Integration > Integration with ElectricSQL > should start and stop sync [51561813.14ms]\n(fail) API Authentication Integration > �\rWЌ\u0003\u0000\u0000tart and stop sync\n(fail) API Authentication Integration > Performance Testing > should handle concurrent API requests [51561813.21ms]\n(fail) API Authentication Integration > Performance Testing > should handle concurrent API requests\n(fail) API Authentication Integration > Performance Testing > should handle high-volume Inngest events [51561813.23ms]\n(fail) API Authentication Integration >  9\u0001Ќ\u0003\u0000\u0000andle high-volume Inngest events\n(fail) BaseAgent - TDD Implementation > Task Execution > should handle task execution errors gracefully [0.34ms]\n(fail) BaseAgent - TDD Implementation > Task Execution > should track task execution metrics [0.88ms]\n(fail) BaseAgent - TDD Implementation > State Management and Persistence > should maintain state consistency during concurrent operations [0.29ms]\n(fail) BaseAgent - TDD Implementation > Error Handling and Recovery > should handle memory leaks and resource cleanup [11.55ms]\n\n 40 pass\n 154 fail\n 12 errors\n 85 expect() calls\nRan 194 tests across 20 files. [2.23s]\n"
		},
		"typescript": {
			"status": "failed",
			"error": "Command failed: bun run check-types --listFiles\n$ turbo check-types --listFiles\n ERROR  unexpected argument '--listFiles' found\n\n  tip: to pass '--listFiles' as a value, use '-- --listFiles'\n\nUsage: turbo <--cache-dir <CACHE_DIR>|--concurrency <CONCURRENCY>|--continue[=<CONTINUE>]|--single-package|--framework-inference [<BOOL>]|--global-deps <GLOBAL_DEPS>|--env-mode [<ENV_MODE>]|--filter <FILTER>|--affected|--output-logs <OUTPUT_LOGS>|--log-order <LOG_ORDER>|--only|--pkg-inference-root <PKG_INFERENCE_ROOT>|--log-prefix <LOG_PREFIX>|TASKS|PASS_THROUGH_ARGS>\n\nFor more information, try '--help'.\n\nerror: script \"check-types\" exited with code 1\n"
		}
	},
	"bundleAnalysis": {
		"server": {
			"totalSize": 156711,
			"files": [
				{
					"name": "index.js",
					"size": 104820,
					"type": "js"
				},
				{
					"name": "AnalystAgent-Bui7Lth3.js",
					"size": 16622,
					"type": "js"
				},
				{
					"name": "ResearcherAgent-DGU5v692.js",
					"size": 14622,
					"type": "js"
				},
				{
					"name": "CoderAgent-1QHvdplv.js",
					"size": 12049,
					"type": "js"
				},
				{
					"name": "BaseAgent-BKGJtk_E.js",
					"size": 8598,
					"type": "js"
				}
			],
			"breakdown": {
				"javascript": 156711,
				"css": 0,
				"wasm": 0,
				"other": 0
			}
		}
	},
	"coreWebVitals": {},
	"recommendations": []
}
